# This is the "one-and-only" configuration for OpenDaVINCI.
# Its format is like:
#
# section.key=value
#
# If you have several modules of the same type, the following configuration
# scheme applies:
#
# global.key=value # <-- This configuration applies for all modules.
#
# section.key=value # <-- This configuration applies for all modules of type "section".
#
# section:ID.key=value # <-- This configuration applies for the module "ID" of type "section".


###############################################################################
###############################################################################
#
# GLOBAL CONFIGURATION
#

global.car = file:///opt/opendlv.data/Robot1.objx
global.scenario = file:///opt/opendlv.data/Maze3.scnx
global.showGrid = 0

# Location of the origin of the reference frame (example: 57.70485804 N, 11.93831921 E)
global.reference.WGS84.latitude = 57.70485804
global.reference.WGS84.longitude = -11.93831921

# The following attributes define the buffer sizes for recording and
# replaying. You need to adjust these parameters depending on the
# camera resolution for example (640x480x3 --> 1000000 for memorySegment,
# 1280x720x3 --> 2800000).
global.buffer.memorySegmentSize = 2800000 # Size of a memory segment in bytes.
global.buffer.numberOfMemorySegments = 4  # Number of memory segments.

# The following key describes the list of modules expected to participate in this --cid session.
global.session.expectedModules = copplar-control-example


###############################################################################
###############################################################################
#
# NEXT, THE CONFIGURATION FOR OpenDaVINCI TOOLS FOLLOWS. 
#
###############################################################################
###############################################################################
#
# CONFIGURATION FOR ODSUPERCOMPONENT
#

# If the managed level is pulse_shift, all connected modules will be informed
# about the supercomponent's real time by this increment per module. Thus, the
# execution times per modules are better aligned with supercomponent and the
# data exchange is somewhat more predictable.
odsupercomponent.pulseshift.shift = 10000 # (in microseconds)

# If the managed level is pulse_time_ack, this is the timeout for waiting for
# an ACK message from a connected client.
odsupercomponent.pulsetimeack.timeout = 5000 # (in milliseconds)

# If the managed level is pulse_time_ack, the modules are triggered sequentially
# by sending pulses and waiting for acknowledgment messages. To allow the modules
# to deliver their respective containers, this yielding time is used to sleep
# before supercomponent sends the pulse messages the next module in this execution
# cycle. This value needs to be adjusted for networked simulations to ensure
# deterministic execution. 
odsupercomponent.pulsetimeack.yield = 5000 # (in microseconds)

# List of modules (without blanks) that will not get a pulse message from odsupercomponent.
odsupercomponent.pulsetimeack.exclude = odcockpit


###############################################################################
#
# CONFIGURATION FOR ODSIMIRUS (infrared and ultrasonic simulation)
#
odsimirus.numberOfSensors = 6                   # Number of configured sensors.
odsimirus.showPolygons = 1                      # Show explicitly all polygons.

odsimirus.sensor0.id = 0                        # This ID is used in SensorBoardData structure.
odsimirus.sensor0.name = Infrared_FrontRight    # Name of the sensor
odsimirus.sensor0.rotZ = -90                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor0.translation = (1.0;-1.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor0.angleFOV = 5                  # In degrees.
odsimirus.sensor0.distanceFOV = 3               # In meters.
odsimirus.sensor0.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor0.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor1.id = 1                        # This ID is used in SensorBoardData structure.
odsimirus.sensor1.name = Infrared_Rear          # Name of the sensor
odsimirus.sensor1.rotZ = -180                   # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor1.translation = (-1.0;0.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor1.angleFOV = 5                  # In degrees.
odsimirus.sensor1.distanceFOV = 3               # In meters.
odsimirus.sensor1.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor1.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor2.id = 2                        # This ID is used in SensorBoardData structure.
odsimirus.sensor2.name = Infrared_RearRight     # Name of the sensor
odsimirus.sensor2.rotZ = -90                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor2.translation = (-1.0;-1.0;0.0) # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor2.angleFOV = 5                  # In degrees.
odsimirus.sensor2.distanceFOV = 3               # In meters.
odsimirus.sensor2.clampDistance = 2.9           # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor2.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor3.id = 3                        # This ID is used in SensorBoardData structure.
odsimirus.sensor3.name = UltraSonic_FrontCenter # Name of the sensor
odsimirus.sensor3.rotZ = 0                      # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor3.translation = (1.0;0.0;0.0)   # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor3.angleFOV = 20                 # In degrees.
odsimirus.sensor3.distanceFOV = 40              # In meters.
odsimirus.sensor3.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor3.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor4.id = 4                        # This ID is used in SensorBoardData structure.
odsimirus.sensor4.name = UltraSonic_FrontRight  # Name of the sensor
odsimirus.sensor4.rotZ = -45                    # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor4.translation = (1.0;-1.0;0.0)  # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor4.angleFOV = 20                 # In degrees.
odsimirus.sensor4.distanceFOV = 40              # In meters.
odsimirus.sensor4.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor4.showFOV = 1                   # Show FOV in monitor.

odsimirus.sensor5.id = 5                        # This ID is used in SensorBoardData structure.
odsimirus.sensor5.name = UltraSonic_RearRight   # Name of the sensor
odsimirus.sensor5.rotZ = -135                   # Rotation of the sensor around the Z-axis in degrees, positive = counterclockwise, negative = clockwise, 0 = 12am, -90 = 3pm, ...
odsimirus.sensor5.translation = (-1.0;-1.0;0.0) # Translation (X;Y;Z) w.r.t. vehicle's center
odsimirus.sensor5.angleFOV = 20                 # In degrees.
odsimirus.sensor5.distanceFOV = 40              # In meters.
odsimirus.sensor5.clampDistance = 39            # Any distances greater than this distance will be ignored and -1 will be returned.
odsimirus.sensor5.showFOV = 1                   # Show FOV in monitor.

###############################################################################
###############################################################################
#
# CONFIGURATION FOR MINIATURE
#
sim-miniature-differential.debug = 1

logic-miniature-navigation.gpio-pins = 31
logic-miniature-navigation.pwm-pins = 0,1
